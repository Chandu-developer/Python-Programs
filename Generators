#yield is a keyword in Python that is used to return from a function without destroying the states of 
its local variable and when the function is called, the execution starts from the last yield statement.
# Any function that contains a yield keyword is termed as generator.
#This is just printing the values in a list
#Here the empty list r stored each and evry elem into it
#But I want one elem at a time it can be done by yield and yield returns only one elem at a time
#so the memory space will not consume more and also time taken to execute is also very fast in case 
of larger lists"""

"""def func():
    r=[] #empty list
    for i in a: #for every element in a list
        r.append(i) #storing every elem into the empty list r
    return r #returning all the elements
a=[2,5,4,3,6]
b=func() #created an object for func
print(b)"""

#Now by using yield
"""def func():
    yield a #It returns one elem at a time but not terminate like return after the first return
def func1():
    for i in a:
        if i%2==0:
            yield i
a=[4,3,6,5,8,0,7,2]
print(func().__next__())

for i in func1():
    print(i)
print(list[i])"""


